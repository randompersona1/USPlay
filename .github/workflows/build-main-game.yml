name: Build Main Game

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

env:
  PROJECT_PATH: UltraStar Play

jobs:
  build-job:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2023.2.12f1
        targetPlatform:
          - StandaloneWindows64
          #- StandaloneLinux64
          #- StandaloneOSX
          # Skip Android build until "JDK not found" issue has been solved (https://github.com/game-ci/unity-builder/issues/489)
          #- Android
          #- iOS
          # - WebGL
    steps:
      - name: Unity - Activate
        uses: game-ci/unity-activate@v2.0.0
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_VERSION: ${{ matrix.unityVersion }}

      # Clone repo and restore cache
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ env.PROJECT_PATH }}-${{ matrix.targetPlatform }}-${{ hashFiles(env.PROJECT_PATH) }}
          restore-keys: |
            Library-${{ env.PROJECT_PATH }}-${{ matrix.targetPlatform }}-
            Library-${{ env.PROJECT_PATH }}-
            Library-

      # Run setup script
      - name: Setup Script
        working-directory: tools
        run: sh setup.sh

      # Build Executables.
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_VERSION: ${{ matrix.unityVersion }}
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.targetPlatform }}-build
          path: build/${{ matrix.targetPlatform }}

      # Return License
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()
